version: 2
jobs:
    preamble:
        docker:
            - image: circleci/node:8-browsers
        steps:
            - checkout
            - restore_cache:
                keys:
                    - v1-npm-{{ checksum "package.json" }}
            - run:
                name: Pull Dependencies
                command: npm install
            - save_cache:
                key: v1-npm-{{ checksum "package.json" }}
                paths:
                    - "~/project/node_modules"
            
    build:
        docker:
            - image: circleci/node:8-browsers
        steps:
            - checkout
            - restore_cache:
                keys:
                    - v1-npm-{{ checksum "package.json" }}
            - run:
                name: Build Client Side
                command: (cd ./client && ../node_modules/webpack/bin/webpack.js --colors)
            - run:
                name: Build Server Side
                command: ./node_modules/.bin/babel server --out-dir ./dist
            - run:
                name: package.json
                command: cp ./package*.json ./dist
            - persist-to-workspace:
                root: "~/project"
                paths:
                    - dist

    package:
        docker:
            - image: circleci/node:8-browsers
        steps:
            - attach_workspace:
                at: "~/project/"
            - run:
                name: Package zip for S3
                command: (cd ./dist && zip -r /tmp/server.zip ./*)
            - persist_to_workspace:
                root: /tmp
                paths:
                    - server.zip
    deploy:
        docker:
            - image: circleci/python:2.7-jessie
        steps:
            - run:
                name: Install awscli
                command: sudo pip install awscli
            - attach_workspace:
                at: /tmp/workspace
            - run:
                name: Upload to S3
                command: aws s3 cp --region us-east-1 /tmp/workspace/server.zip s3://my-portfolio-deploy
            - run:
                name: Deploy to OpsWorks
                command: aws opsworks --region us-east-1 create-deployment --stack-id 2c3577aa-a9de-4f45-9b15-9f563fa44410 --app-id f3b968ea-8510-4694-9034-058dd717b627 --command "{\"Name\":\"deploy\"}"

workflows:
    version: 2
    build-deploy:
        jobs:
            - preamble
            - build:
                requires:
                    - preamble
            - package:
                requires:
                    - build
            - deploy:
                requires:
                    - package
                filters:
                    branches:
                        only: master
